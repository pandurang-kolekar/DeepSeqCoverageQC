{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DeepSeqCoverageQC","text":"<p>      DeepSeqCoverageQC         Compute coverage QC metrics for deep targeted sequencing data    <p> </p> <p> Explore the docs \u00bb Read the paper \u00bb Request Feature     |     Report Bug      \u2b50 Consider starring the repo! \u2b50     </p> </p> <p></p>"},{"location":"#table-of-contents","title":"Table Of Contents","text":"<ol> <li>Installation</li> <li>Main application - commands</li> <li>Build index</li> <li>Compute coverage QC</li> <li>Generating count files</li> <li>Workflow</li> </ol>"},{"location":"#license","title":"LICENSE","text":"<p>License</p> <p>Copyright \u00a9 2023 Pandurang Kolekar, St. Jude Children's Research Hospital</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <p>http://www.apache.org/licenses/LICENSE-2.0</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"#contact","title":"Contact","text":"<ul> <li> Pandurang Kolekar</li> </ul>"},{"location":"buildIndex/","title":"Build Index","text":""},{"location":"buildIndex/#buid-index","title":"Buid index","text":""},{"location":"buildIndex/#generate-index-for-the-panel","title":"Generate index for the panel","text":"<pre><code>DeepSeqCoverageQC buildIndex --help\n</code></pre>"},{"location":"buildIndex/#buildindex","title":"buildIndex","text":"<p>Generate index for the panel</p> <p>Usage:</p> <pre><code>buildIndex [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--panelFile</code> Path File with panel regions. File should have four tab-delimited columns: Chr, Start, End, Gene _required <code>--outfile</code> Path Output file name. None <code>--padding</code> integer Padding (bp) for regions. <code>0</code> <code>--chr</code> / <code>--no-chr</code> boolean Add 'chr' prefix <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"buildIndex/#input-file-format-for-panelfile","title":"Input file format for <code>--panelFile</code>","text":"Chr Start End Gene chr1 998582 998582 chr1.998582.G.C chr1 1098421 1098421 chr1.1098421.C.T chr1 1646371 1646371 chr1.1646371.G.T chr1 1718760 1718886 GNB1 chr1 1720482 1720718 GNB1"},{"location":"buildIndex/#output-files","title":"Output files","text":"<ul> <li><code>buildIndex</code> generates two output files. </li> <li><code>*_regions.txt</code> file<ul> <li>This file consists of expanded panel region positions retaining gene and length information</li> <li>This file is used to calculate region level QC metrics using <code>computeCoverageQC</code></li> </ul> </li> <li><code>*_uniquePositions.txt</code> file<ul> <li>This file consists of unique positions in the panel to calculate sample level QC metrics using <code>computeCoverageQC</code></li> </ul> </li> </ul>"},{"location":"buildIndex/#output-format","title":"Output format","text":""},{"location":"buildIndex/#_regionstxt-file-partial-output","title":"<code>*_regions.txt</code> file (partial output)","text":"<p>Note</p> <p>Please note that original region chr1:1718760-1718886 is being expanded over individual positions as shown under Chr.Pos column</p> Chr.Pos Chr Start End Gene RegionLength chr1.1718760 chr1 1718760 1718886 GNB1 127 chr1.1718761 chr1 1718760 1718886 GNB1 127 chr1.1718762 chr1 1718760 1718886 GNB1 127 chr1.1718763 chr1 1718760 1718886 GNB1 127"},{"location":"buildIndex/#_uniquepositionstxt-file-partial-output","title":"<code>*_uniquePositions.txt</code> file (partial output)","text":"Chr.Pos chr1.100345409 chr1.100939777 chr1.101106981 chr1.101750747 chr1.102322817"},{"location":"computeCoverage/","title":"Compute coverage QC","text":""},{"location":"computeCoverage/#compute-coverage-qc-metrics-over-regions-in-the-panel","title":"Compute coverage QC metrics over regions in the panel","text":""},{"location":"computeCoverage/#computecoverageqc","title":"computeCoverageQC","text":"<p>Compute coverageQC metrics across panel regions.</p> <p>Usage:</p> <pre><code>computeCoverageQC [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--panelPosFile</code> Path File with panel positions as generated by buildIndex command.File should have six columns: Chr.Pos, Chr, Start, End, Gene, RegionLength _required <code>--summaryPosFile</code> Path File with unique positions in the panel to compute sample level summary statistics. File should have one column: Chr.Pos, as generated by buildIndex command. _required <code>--countFile</code> Path Count file(s) generated by SequencErr program. File(s) should've seven columns: Chr, Pos, A_Q_30, C_Q_30, G_Q_30, T_Q_30, N_Q_30 _required <code>--outdir</code> Path Output directory path. None <code>--outSummary</code> / <code>--no-outSummary</code> boolean Output counts at summary positions <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code> <p>How to generate count files?</p> <p>The count files should be generated using SequencErr1</p> <p>Please refer to Generating count files</p>"},{"location":"computeCoverage/#output-files","title":"Output files","text":"<ul> <li><code>computeCoverageQC</code> generates two output files. </li> <li>Panel_regionQC file<ul> <li>This file consists of the region level QC metrics for all the regions in the panel</li> </ul> </li> <li>Sample_summaryQC file<ul> <li> <ul> <li>This file consists sample level QC metrics across all the positions in the panel</li> </ul> </li> </ul> </li> </ul>"},{"location":"computeCoverage/#output-format","title":"Output format","text":""},{"location":"computeCoverage/#panel_regionqc-file","title":"Panel_regionQC file","text":"Chr Start End Gene RegionLength paddedLength Mean SD basecount_2SD basecount_1.5SD basecount_1SD chr1 1718760 1718886 GNB1 127 127 32883.11 3783.5 127 127 127 chr1 1720482 1720718 GNB1 237 237 30500.3 4670.12 237 237 237 . . . . . . . . . . . . . . . . . . . . . . chrX 153629033 153629205 RPL10 173 173 17666.45 2345.65 173 173 166 chrX 153711341 153711341 chrX.153711341.C.G 1 1 25764.0 1 1 1"},{"location":"computeCoverage/#sample_summaryqc-file","title":"Sample_summaryQC file","text":"Sample sampleMean sampleMedian sampleSD CV cut_2SD cut_1pt5SD cut_1SD quantile_20 fold_80 uniformityOfCoverage Pcntbase_2SDPcntbase_1.5SD Pcntbase_1SD EW-8_S5 21974.68 20209.0 14067.16 0.64 -6159.64 873.94 7907.52 12573.0 1.75 94.92 100.0 98.37 <ol> <li> <p>Davis, E.M., Sun, Y., Liu, Y., Kolekar, P. et al. SequencErr: measuring and suppressing sequencer errors in next-generation sequencing data. Genome Biol 22, 37 (2021). https://doi.org/10.1186/s13059-020-02254-2 \u21a9</p> </li> </ol>"},{"location":"generateCounts/","title":"Generating count files","text":""},{"location":"generateCounts/#generate-count-files-from-the-bam-files","title":"Generate count files from the BAM files","text":"<p>How to generate count files?</p> <ul> <li> <p>The count files should be generated using SequencErr1</p> </li> <li> <p>Publication: Davis, E.M. et al. SequencErr: measuring and suppressing sequencer errors in next-generation sequencing data. Genome Biol 22(1):37 (2021). doi: 10.1186/s13059-020-02254-2</p> </li> <li> <p>Read more about SequencErr documentation here</p> </li> <li> <p> DockerHub</p> </li> </ul>"},{"location":"generateCounts/#docker-image-for-sequencerr-can-be-run-as-follows","title":"Docker image for SequencErr can be run as follows","text":"<pre><code>docker run stjudecloud/sequencerr:branch-sequencErr-1.0.0\n</code></pre> <ul> <li>Users are recommended to use <code>-regions</code> option to provide panel BED file to    restrict the counts to positions in the panel</li> </ul> <pre><code>REQUIRED:\n bam                      Bamfile input, sorted by CHROM then START. A bam index must be present in the CWD.\n outfile                  Output file names to hold the base counts per coordinate.\n\nOPTIONS:\n -regions=file.bed        Bed file of regions to report. Lines don't need to be sorted by chromosomes,\n                          but coordinates within a chromosome must be sorted by START, END.\n                             Reference names must match what's in the bamfile header.\n\n -chr=str1,str2...        Only report counts on the chromosomes listed. Names must be comma seperated and must match the reference names in the bam header.\n -trimLen=int             Number of bases to trim off the 5' and 3' of the read. Default is 5.\n -qCutHard=int            A hard threshold for discarding reads. If the fraction of bases with quality scores\n                          falling below this value exceeds fcut, the read will be filtered.\n -fcut=double             Fraction of bases with a quality score less than &lt;qCutHard&gt; to tolerate. Default is 0.05\n -mincov=int              Minimum coverage required at a given position in order for the position to be reported. Default is 10.\n -qcut=int1               Report the number of bases that passes this quality threshold. Default is 30.\n -peRate=double           Fraction of errant base calls per tile to tolerate. Default is 0.0001.\n -pe=str                  Paired-error rate filename. If provided, the paired error rates will be reported.\n -bad=str                 A file of tile names to exclude from the analysis. The file should be line delimited\n                          and fields should be ':' separated. This is the same format as what is returned\n                          in the Paired-error rate file.\n                          Example: Instrument:Flowcell:Lane:Tile\n\n -nodesize=int            Size of counter memory block allocation in base pairs. Larger is better for WGS, smaller is better for sparse data\n                          such as that found in amplicon or whole exome sequencing. Default is 4096\n\nCitations:\n\n     1. Davis, E.M., Sun, Y., Liu, Y. et al. SequencErr: measuring and suppressing sequencer errors in next-generation sequencing data.\n     Genome Biol 22, 37 (2021). https://doi.org/10.1186/s13059-020-02254-2\n\n     2. Ma, X., Shao, Y., Tian, L. et al. Analysis of error profiles in deep next-generation sequencing data.\n     Genome Biol 20, 50 (2019). https://doi.org/10.1186/s13059-019-1659-6\n\nLICENSE\n\nA patent application has been filed based on the research disclosed in this software and related manuscript; the pending\npatent does not restrict the research use although the commercial sale and use of this software are not permitted.\n\nCopyright 2021 St. Jude Children's Research Hospital\n\nLicensed under a modified version of the Apache License, Version 2.0 (the \"License\") for academic research use only; you\nmay not use this file except in compliance with the License. To inquire about commercial use, please contact the St. Jude\nOffice of Technology Licensing at scott.elmer@stjude.org.\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\"\nBASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n</code></pre> <ol> <li> <p>Davis, E.M., Sun, Y., Liu, Y., Kolekar, P. et al. SequencErr: measuring and suppressing sequencer errors in next-generation sequencing data. Genome Biol 22, 37 (2021). https://doi.org/10.1186/s13059-020-02254-2 \u21a9</p> </li> </ol>"},{"location":"install/","title":"Installation","text":""},{"location":"install/#installation","title":"Installation","text":""},{"location":"install/#github","title":"GitHub","text":"<p> Repository - https://github.com/pandurang-kolekar/panelQC</p>"},{"location":"install/#using-miniconda","title":"Using Miniconda","text":"<pre><code>conda create --name panelQC python==3.9\nconda activate panelQC\npython -m pip install git+https://github.com/pandurang-kolekar/panelQC.git@main\nDeepSeqCoverageQC --help\n</code></pre>"},{"location":"install/#using-pip","title":"Using Pip","text":"<p>Note</p> <p>Requires Python version &gt;=3.9</p> <pre><code>python -m pip install git+https://github.com/pandurang-kolekar/panelQC.git@main\n</code></pre>"},{"location":"main/","title":"Main application","text":""},{"location":"main/#main-application-and-commands","title":"Main application and commands","text":""},{"location":"main/#commands","title":"Commands","text":"<ul> <li>Two main commands are supported by DeepSeqCoverageQC<ul> <li>buildIndex</li> <li>computeCoverageQC</li> </ul> </li> </ul>"},{"location":"main/#usage","title":"Usage","text":"<ul> <li>Application can be run from the terminal as follows,</li> </ul> <pre><code>DeepSeqCoverageQC --help\n</code></pre> <pre><code>Usage: DeepSeqCoverageQC [OPTIONS] COMMAND [ARGS]...\n\n DeepSeqCoverageQC: Compute coverageQC for targeted deep sequencing data\n\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --help      Show this message and exit.                                        \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 buildIndex            Generate index for the panel                             \u2502\n\u2502 computeCoverageQC     Compute coverageQC metrics across panel regions.         \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"workflow/","title":"Workflow","text":""},{"location":"workflow/#workflow","title":"Workflow","text":""},{"location":"workflow/#steps-in-the-deepseqcoverageqc-workflow","title":"Steps in the DeepSeqCoverageQC workflow","text":"<pre><code>graph TD\n  A(panelFile) ----&gt; B[/buildIndex/];\n  B -- panelPosFile, summaryPosFile --&gt;C[/computeCoverageQC/];\n  D(BAM) ----&gt; E[/SequencErr/];\n  F(panelBedFile) ----&gt; E[/SequencErr/];\n  E -- countFile --&gt;C;\n  C --&gt; G(Panel_regionQC)\n  C --&gt; H(Sample_summaryQC)\n</code></pre>"}]}